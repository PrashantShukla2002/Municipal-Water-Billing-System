package com.waterbill.backend.entity;

import com.waterbill.backend.enums.PaymentLinkStatus;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;
import java.util.Date;

@Entity
@Table(name = "payment_links")
@NoArgsConstructor
@AllArgsConstructor
public class PaymentLink {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "bill_id", nullable = false)
    private Bill bill;

    @Column(name = "cf_link_id")
    private String cfLinkId;

    @Column(name = "link_id")
    private String linkId; // Your idempotent key

    @Column(name = "link_url")
    private String linkUrl;

    @Column(name = "amount")
    private Double amount;

    @Column(name = "currency")
    private String currency;

    @Column(name = "expires_at")
    private LocalDateTime expiresAt;

    @Enumerated(EnumType.STRING)
    @Column(name = "status")
    private PaymentLinkStatus status;

    @Column(name = "created_at")
    private LocalDateTime createdAt;

    @PrePersist
    protected void onCreate() {
        if (currency == null) {
            currency = "INR";
        }
        if (status == null) {
            status = PaymentLinkStatus.ACTIVE;
        }
        createdAt = LocalDateTime.now();
    }

    public void setBill(String bill) {
        
    }

    public void setIdempotencyKey(String idempotencyKey) {
    }

    public void setCreatedAt(Date date) {
    }



    // Getters and setters (can be generated by Lombok or added manually)
}
